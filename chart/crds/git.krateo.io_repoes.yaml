---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: repoes.git.krateo.io
spec:
  group: git.krateo.io
  names:
    categories:
    - git
    - krateo
    kind: Repo
    listKind: RepoList
    plural: repoes
    singular: repo
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.originCommitId
      name: ORIGIN_COMMIT_ID
      type: string
    - jsonPath: .status.originBranch
      name: ORIGIN_BRANCH
      type: string
    - jsonPath: .status.targetCommitId
      name: TARGET_COMMIT_ID
      type: string
    - jsonPath: .status.targetBranch
      name: TARGET_BRANCH
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Repo is a managed resource that represents a Krateo Git Repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A RepoSpec defines the desired state of a Repo.
            properties:
              configMapKeyRef:
                description: 'ConfigMapKeyRef: holds template values'
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                  namespace:
                    description: Namespace of the referenced object.
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
              enableUpdate:
                default: false
                description: 'EnableUpdate: If `true`, the provider performs updates
                  on the repository specified in `toRepo` when newer commits are retrieved
                  from `fromRepo`'
                type: boolean
              fromRepo:
                description: 'FromRepo: repo origin to copy from'
                properties:
                  authMethod:
                    default: generic
                    description: |-
                      AuthMethod: Possible values are: `generic`, `bearer`, `gitcookies`. `generic` requires  `secretRef` and `usernameRef`; `generic` requires only `secretRef`; `cookiefile` requires only `secretRef`
                      In case of 'cookiefile' the secretRef must contain a file with the cookie.
                    enum:
                    - generic
                    - bearer
                    - cookiefile
                    type: string
                  branch:
                    description: 'Branch: if in spec.fromRepo, the branch to copy
                      from. If in spec.toRepo, represents the branch to populate;
                      If the branch does not exist on remote is created by the provider.'
                    type: string
                  cloneFromBranch:
                    description: |-
                      CloneFromBranch: used the parent of the new branch.
                      - If the branch exists, the parameter is ignored.
                      - If the parameter is not set, the branch is created empty and has no parents (no history) - `git switch --orphan branch-name`
                    type: string
                  path:
                    default: /
                    description: 'Path: if in spec.fromRepo, Represents the folder
                      to clone from. If not set the entire repository is cloned. If
                      in spec.toRepo, represents the folder to use as destination.'
                    type: string
                  secretRef:
                    description: 'SecretRef: reference to a secret that contains token
                      required to git server authentication or cookie file in case
                      of ''cookiefile'' authMethod.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  url:
                    description: 'Url: url of the remote repository'
                    type: string
                  usernameRef:
                    description: 'UsernameRef: holds username required to git server
                      authentication. - If ''authMethod'' is ''bearer'' or ''cookiefile''
                      the field is ignored. If the field is not set, username is setted
                      as ''krateoctl'''
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                required:
                - branch
                - secretRef
                - url
                type: object
              insecure:
                description: 'Insecure: Insecure is useful with hand made SSL certs
                  (default: false)'
                type: boolean
              toRepo:
                description: 'ToRepo: repo destination to copy to'
                properties:
                  authMethod:
                    default: generic
                    description: |-
                      AuthMethod: Possible values are: `generic`, `bearer`, `gitcookies`. `generic` requires  `secretRef` and `usernameRef`; `generic` requires only `secretRef`; `cookiefile` requires only `secretRef`
                      In case of 'cookiefile' the secretRef must contain a file with the cookie.
                    enum:
                    - generic
                    - bearer
                    - cookiefile
                    type: string
                  branch:
                    description: 'Branch: if in spec.fromRepo, the branch to copy
                      from. If in spec.toRepo, represents the branch to populate;
                      If the branch does not exist on remote is created by the provider.'
                    type: string
                  cloneFromBranch:
                    description: |-
                      CloneFromBranch: used the parent of the new branch.
                      - If the branch exists, the parameter is ignored.
                      - If the parameter is not set, the branch is created empty and has no parents (no history) - `git switch --orphan branch-name`
                    type: string
                  path:
                    default: /
                    description: 'Path: if in spec.fromRepo, Represents the folder
                      to clone from. If not set the entire repository is cloned. If
                      in spec.toRepo, represents the folder to use as destination.'
                    type: string
                  secretRef:
                    description: 'SecretRef: reference to a secret that contains token
                      required to git server authentication or cookie file in case
                      of ''cookiefile'' authMethod.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  url:
                    description: 'Url: url of the remote repository'
                    type: string
                  usernameRef:
                    description: 'UsernameRef: holds username required to git server
                      authentication. - If ''authMethod'' is ''bearer'' or ''cookiefile''
                      the field is ignored. If the field is not set, username is setted
                      as ''krateoctl'''
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                required:
                - branch
                - secretRef
                - url
                type: object
              unsupportedCapabilities:
                default: false
                description: 'UnsupportedCapabilities: If `true` [capabilities not
                  supported by any client implementation](https://github.com/go-git/go-git/blob/4fd9979d5c2940e72bdd6946fec21e02d959f0f6/plumbing/transport/common.go#L310)
                  will not be used by the provider'
                type: boolean
            required:
            - fromRepo
            - toRepo
            type: object
          status:
            description: A RepoStatus represents the observed state of a Repo.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              originBranch:
                description: 'OriginBranch: branch where commit was done'
                type: string
              originCommitId:
                description: 'OriginCommitId: last commit identifier of the origin
                  repo'
                type: string
              targetBranch:
                description: 'TargetBranch: branch where commit was done'
                type: string
              targetCommitId:
                description: 'TargetCommitId: last commit identifier of the target
                  repo'
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
